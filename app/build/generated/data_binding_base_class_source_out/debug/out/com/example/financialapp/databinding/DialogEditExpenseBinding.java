// Generated by view binder compiler. Do not edit!
package com.example.financialapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.financialapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditExpenseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText editTextEditExpenseAmount;

  @NonNull
  public final EditText editTextEditExpenseDate;

  @NonNull
  public final EditText editTextEditExpenseNote;

  @NonNull
  public final Spinner spinnerEditExpenseType;

  private DialogEditExpenseBinding(@NonNull LinearLayout rootView,
      @NonNull EditText editTextEditExpenseAmount, @NonNull EditText editTextEditExpenseDate,
      @NonNull EditText editTextEditExpenseNote, @NonNull Spinner spinnerEditExpenseType) {
    this.rootView = rootView;
    this.editTextEditExpenseAmount = editTextEditExpenseAmount;
    this.editTextEditExpenseDate = editTextEditExpenseDate;
    this.editTextEditExpenseNote = editTextEditExpenseNote;
    this.spinnerEditExpenseType = spinnerEditExpenseType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextEditExpenseAmount;
      EditText editTextEditExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextEditExpenseAmount == null) {
        break missingId;
      }

      id = R.id.editTextEditExpenseDate;
      EditText editTextEditExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextEditExpenseDate == null) {
        break missingId;
      }

      id = R.id.editTextEditExpenseNote;
      EditText editTextEditExpenseNote = ViewBindings.findChildViewById(rootView, id);
      if (editTextEditExpenseNote == null) {
        break missingId;
      }

      id = R.id.spinnerEditExpenseType;
      Spinner spinnerEditExpenseType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEditExpenseType == null) {
        break missingId;
      }

      return new DialogEditExpenseBinding((LinearLayout) rootView, editTextEditExpenseAmount,
          editTextEditExpenseDate, editTextEditExpenseNote, spinnerEditExpenseType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
