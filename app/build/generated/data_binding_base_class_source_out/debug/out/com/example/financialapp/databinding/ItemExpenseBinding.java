// Generated by view binder compiler. Do not edit!
package com.example.financialapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.financialapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExpenseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonEdit;

  @NonNull
  public final TextView textViewExpenseAmount;

  @NonNull
  public final TextView textViewExpenseDate;

  @NonNull
  public final TextView textViewExpenseNote;

  @NonNull
  public final TextView textViewExpenseType;

  private ItemExpenseBinding(@NonNull LinearLayout rootView, @NonNull Button buttonDelete,
      @NonNull Button buttonEdit, @NonNull TextView textViewExpenseAmount,
      @NonNull TextView textViewExpenseDate, @NonNull TextView textViewExpenseNote,
      @NonNull TextView textViewExpenseType) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.textViewExpenseAmount = textViewExpenseAmount;
    this.textViewExpenseDate = textViewExpenseDate;
    this.textViewExpenseNote = textViewExpenseNote;
    this.textViewExpenseType = textViewExpenseType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDelete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonEdit;
      Button buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.textViewExpenseAmount;
      TextView textViewExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpenseAmount == null) {
        break missingId;
      }

      id = R.id.textViewExpenseDate;
      TextView textViewExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpenseDate == null) {
        break missingId;
      }

      id = R.id.textViewExpenseNote;
      TextView textViewExpenseNote = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpenseNote == null) {
        break missingId;
      }

      id = R.id.textViewExpenseType;
      TextView textViewExpenseType = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpenseType == null) {
        break missingId;
      }

      return new ItemExpenseBinding((LinearLayout) rootView, buttonDelete, buttonEdit,
          textViewExpenseAmount, textViewExpenseDate, textViewExpenseNote, textViewExpenseType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
